---
title: "Population genetics"
subtitle: "Foundations"
author:
    - "Per Unneberg"
format:
  revealjs:
    footer: Population genetics foundations
---

## Setup  {visibility="hidden" .unnumbered .unlisted}

{{< include ../_knitr.qmd >}}

{{< include ../_rlibs.qmd >}}

```{r libs}
#| echo: false
#| eval: true
#| cache: false
library(gganimate)
library(patchwork)
library(igraph)
library(ggraph)
library(tidygraph)
```

::: {.notes }

:::

# DNA variation

::: {.notes }

From [@nei_MolecularEvolutionPhylogenetics_2000, p. 231]:

> The main subject of population genetics is to study the generation
> and maintenance of genetic polymorphism and to understand the
> mechanisms of evolution at the population level

[@casillas_MolecularPopulationGenetics_2017, p. 1026]:

> Big data samples of complete genome sequences of many individuals
> from natural populations of many species have transformed population
> genetics inferences on samples of loci to population genomics: the
> analysis of genome-wide patterns of DNA variation within and between
> species.

:::

## DNA variation

::: {.dna .small}

| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |
|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:--:|:--:|:--:|:--:|:--:|:--:|
| T | T | A | C | A | A | T | C | C | G  | A  | T  | C  | G  | T  |
| T | T | A | C | G | A | T | G | C | G  | C  | T  | C  | G  | T  |
| T | C | A | C | A | A | T | G | C | G  | A  | T  | G  | G  | A  |
| T | T | A | C | G | A | T | G | C | G  | C  | T  | C  | G  | T  |

: Sequence aligmnent of four DNA sequences
  [@hahn_MolecularPopulationGenetics_2019, Fig 1.1].
  {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]"}

:::

The main data for molecular population genetics are DNA sequences. The
alignment above shows a *sample* of four DNA *sequences*. Each
sequence has 15 nucleotides (*sites*) "from the same *locus*
(location) on a chromosome" [p.2
@hahn_MolecularPopulationGenetics_2019]

:::: {.columns}

::: {.column width="60%"}

::: {.fragment}

Alternative names for *sequence*:

:::

:::: {.columns}

::: {.column width="50%"}

::: {.incremental}

- *chromosome*
- *gene*

:::

:::

::: {.column width="50%"}

::: {.incremental}

- *allele* (different by origin)
- *sample*
- *cistron*

:::

:::

::::

:::

::: {.column width="40%"}

::: {.fragment}

We will preferentially use *sequence* or *chromosome* to refer to an
entire sequence, and *allele* to refer to individual nucleotides that
differ.

:::

:::

::::

## DNA variation - monomorphic sites

::: {.dna }

| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |
|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:--:|:--:|:--:|:--:|:--:|:--:|
| T | T | A | C | A | A | T | C | C | G  | A  | T  | C  | G  | T  |
| T | T | A | C | G | A | T | G | C | G  | C  | T  | C  | G  | T  |
| T | C | A | C | A | A | T | G | C | G  | A  | T  | G  | G  | A  |
| T | T | A | C | G | A | T | G | C | G  | C  | T  | C  | G  | T  |
| * |   | * | * |   | * | * |   | * | *  |    | *  |    | *  | T  |

: {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]"}

:::

The alignment has 4 DNA sequences where each sequence has length
$L=15$. A site where all nucleotides (alleles) are identical is called
a *monomorphic* site (indicated with asterisks above). There are 9
monomorphic sites.

## DNA variation - segregating sites

::: {.dna }

| 1 | 2     | 3 | 4 | 5     | 6 | 7 | 8     | 9 | 10 | 11    | 12 | 13    | 14 | 15    |
|:-:|:-----:|:-:|:-:|:-----:|:-:|:-:|:-----:|:-:|:--:|:-----:|:--:|:-----:|:--:|:-----:|
| T | T     | A | C | A     | A | T | **C** | C | G  | A     | T  | C     | G  | T     |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
| T | **C** | A | C | A     | A | T | G     | C | G  | A     | T  | **G** | G  | **A** |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
|   | *     |   |   | *     |   |   | *     |   |    | *     |    | *     |    | *     |

: {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]"}

:::

A site where there are different nucleotides (alleles) is called a
*segregating* site (indicated with asterisks above), often denoted
*S*. There are $S=6$ segregating sites.

:::: {.columns}

::: {.column width="50%"}

::: {.fragment}

Alternative names for *segregating site* are:

:::

::: {.incremental}

- *polymorphism*
- *mutation*
- *single nucleotide polymorphism (SNP)*

:::

:::

::: {.column width="50%"}

::: {.fragment}

*mutation* here and onwards refers to the process that generates new
variation and the new variants generated by this process

In contrast to *mutation* which corresponds to within-species
variation, a *substitution* refers to DNA differences between species.

:::

:::

::::

## DNA variation - major and minor alleles

::: {.dna }

| 1 | 2     | 3 | 4 | 5     | 6 | 7 | 8     | 9 | 10 | 11    | 12 | 13    | 14 | 15    |
|:-:|:-----:|:-:|:-:|:-----:|:-:|:-:|:-----:|:-:|:--:|:-----:|:--:|:-----:|:--:|:-----:|
| T | T     | A | C | A     | A | T | **C** | C | G  | A     | T  | C     | G  | T     |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
| T | **C** | A | C | A     | A | T | G     | C | G  | A     | T  | **G** | G  | **A** |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
|   | *     |   |   | *     |   |   | *     |   |    | *     |    | *     |    | *     |

: {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]"}

:::

Much of the nucleotide variation we study consists of *bi-allelic*
SNPs. The most common variant is called the *major* allele, and the
least common the *minor* allele.

The set of alleles found on a single sequence is called *haplotype*.

## Describing DNA variation - heterozygosity {.smaller}

::: {.dna }

| 1 | 2     | 3 | 4 | 5     | 6 | 7 | 8     | 9 | 10 | 11    | 12 | 13    | 14 | 15    |
|:-:|:-----:|:-:|:-:|:-----:|:-:|:-:|:-----:|:-:|:--:|:-----:|:--:|:-----:|:--:|:-----:|
| T | T     | A | C | A     | A | T | **C** | C | G  | A     | T  | C     | G  | T     |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
| T | **C** | A | C | A     | A | T | G     | C | G  | A     | T  | **G** | G  | **A** |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
|   | *     |   |   | *     |   |   | *     |   |    | *     |    | *     |    | *     |

: {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]"}

:::

Once we have a sample of sequences we want to describe the observed
variation. At any position the *i*th allele has sample frequency
$p_i$, where the sum of all allele frequencies is 1. For instance, at
site 1, $p_T=1$ (and by extension $p_A=p_C=p_G=0$), and at site 2
$p_C=1/4$ and $p_T=3/4$.

::: {.notes }

::: {.dna }

| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |
|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:--:|:--:|:--:|:--:|:--:|:--:|
| T | T | A | C | A | A | T | C | C | G  | A  | T  | C  | G  | T  |
| T | T | A | C | G | A | T | G | C | G  | C  | T  | C  | G  | T  |
| T | C | A | C | A | A | T | G | C | G  | A  | T  | G  | G  | A  |
| T | T | A | C | G | A | T | G | C | G  | C  | T  | C  | G  | T  |

: {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,25]"}

:::

:::

:::: {.columns}

::: {.column width="50%"}

::: {.fragment}

#### Heterozygosity

The *heterozygosity* at a site $j$ is given by

$$
h_j = \frac{n}{n-1}\left(1 - \sum_i p_i^2\right)
$$

where the summation is over all alleles and $p_i$ is the frequency of
the $i$-th allele

:::

:::

::: {.column width="50%"}

::: {.fragment}

#### Exercise: calculate the heterozygosity at sites 1, 2 and 5

:::

::: {.fragment}

<!-- markdownlint-disable MD013 -->

$$
h_1 = \frac{4}{3} \left(1 - p_T^2 \right) = 0 \\
h_2 = \frac{4}{3} \left(1 - \left(p_C^2 + p_T^2\right) \right) = \frac{4}{3} \left( 1 - \left(\frac{1}{16} + \frac{9}{16}\right)\right) = \frac{1}{2}\\
h_5 = \frac{4}{3} \left(1 - \left(p_A^2 + p_G^2\right) \right) = \frac{4}{3} \left( 1 - \left(\frac{1}{4} + \frac{1}{4}\right)\right) = \frac{2}{3}
$$

<!-- markdownlint-enable MD013 -->

:::

:::

::::

## Describing DNA variation - nucleotide diversity

::: {.dna }

| 1 | 2     | 3 | 4 | 5     | 6 | 7 | 8     | 9 | 10 | 11    | 12 | 13    | 14 | 15    |
|:-:|:-----:|:-:|:-:|:-----:|:-:|:-:|:-----:|:-:|:--:|:-----:|:--:|:-----:|:--:|:-----:|
| T | T     | A | C | A     | A | T | **C** | C | G  | A     | T  | C     | G  | T     |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
| T | **C** | A | C | A     | A | T | G     | C | G  | A     | T  | **G** | G  | **A** |
| T | T     | A | C | **G** | A | T | G     | C | G  | **C** | T  | C     | G  | T     |
|   | *     |   |   | *     |   |   | *     |   |    | *     |    | *     |    | *     |

: {tbl-colwidths="[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]"}

:::

:::: {.columns}

::: {.column width="50%"}

::: {.fragment}

### Nucleotide diversity $\pi$

The *nucleotide diversity* is the sum of site heterozygosities:

$$
\pi = \sum_{j=1}^S h_j
$$

where $S$ is the number of segregating sites

:::

:::

::: {.column width="50%"}

::: {.fragment}

### Calculate the nucleotide diversity

:::

::: {.fragment}

Observation: $h_i$ either 1/2 or 2/3 (for sites with
$p_{major}=p_{minor}$).

:::

::: {.fragment}

<!-- markdownlint-disable MD013 -->

$$
\pi = \frac{1}{2} + \frac{2}{3} + \frac{1}{2} + \frac{2}{3} + \frac{1}{2} + \frac{1}{2} = 3\frac{1}{3}
$$

<!-- markdownlint-enable MD013 -->

:::

::: {.fragment}

Often we provide $\pi$ per site:

$$
\pi = 3.33/15 = 0.222
$$

:::

:::

::::

## Equilibrium state of alleles in absence of evolutionary forces

### The Hardy-Weinberg equilibrium

For a locus, let $A_1$ and $A_2$ be two different alleles and let $p$
be the frequency of the $A_1$ allele and $q=1-p$ the frequency of the
$A_2$ allele. In the **absence** of **mutation**, **drift**,
**migration**, and other evolutionary processes, the equilibrium state
is given by the **Hardy-Weinberg equilibrium** (**HWE**).

|            |          |          |          |
|------------|----------|----------|----------|
| Genotype:  | $A_1A_1$ | $A_1A_2$ | $A_2A_2$ |
| Frequency: | $p^2$    | $2pq$    | $q^2$    |

Importantly, under the HWE assumption, we can calculate allele
frequencies from genotype frequencies and vice versa:

$$
p = p^2 + pq\\
q = q^2 + pq
$$

::: {.notes }

Segway: apart from describing the variation we want to model how
allele frequencies *change* in time. As
[@gillespie_PopulationGeneticsConcise_2004] points out, measuring
allele frequencies is easy, measuring their change, however, is not

:::

# Models of populations

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

::: {.incremental}

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

:::

:::

::: {.column width="50%"}

:::

::::

::: {.notes }

See @hein_GeneGenealogies_2004 for more assumptions.

:::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero

:::

::: {.column width="50%"}

```{r }
#| label: wright-fisher-model-graph
#| echo: false
#| eval: true
#| cache: false
set.seed(2023)
wf <- wright_fisher_pop(n = 10, generations = 16)
```

```{r }
#| label: wf-1
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
y_range <- range(V(wf)$y)
ggplot_wf(wf %>% filter(y == 0), y_range = y_range) +
  ggtitle("Starting population")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one

:::

::: {.column width="50%"}

```{r }
#| label: wf-2
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %>%
  filter(y >= 0 & y <= 1) %E>%
  filter(from <= -1) %>%
  ggplot_wf(., y_range = y_range) + ggtitle("Offspring")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-3.0
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %E>%
  filter(to == 11) %N>%
  mutate(allele = ifelse(node %in% .E()$from, "parent", allele)) %>%
  mutate(allele = ifelse(node %in% .E()$to, "child", allele)) %>%
  filter(y >= 0 & y <= 1) %N>%
  mutate(x = x[tangled]) %>%
  ggplot_wf(., y_range = y_range, fill = allele) +
  ggtitle("Sampled parents")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-3.1
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %E>%
  filter(to %in% c(11, 12)) %N>%
  mutate(allele = ifelse(node %in% .E()$from, "parent", allele)) %>%
  mutate(allele = ifelse(node %in% .E()$to, "child", allele)) %>%
  filter(y >= 0 & y <= 1) %N>%
  mutate(x = x[tangled]) %>%
  ggplot_wf(., y_range = y_range, fill = allele) +
  ggtitle("Sampled parents")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-3.1b
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %E>%
  filter(to %in% c(11:13)) %N>%
  mutate(allele = ifelse(node %in% .E()$from, "parent", allele)) %>%
  mutate(allele = ifelse(node %in% .E()$to, "child", allele)) %>%
  filter(y >= 0 & y <= 1) %N>%
  mutate(x = x[tangled]) %>%
  ggplot_wf(., y_range = y_range, fill = allele) +
  ggtitle("Sampled parents")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-3.2
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %E>%
  filter(to %in% 11:18) %N>%
  mutate(allele = ifelse(node %in% .E()$from, "parent", allele)) %>%
  mutate(allele = ifelse(node %in% .E()$to, "child", allele)) %>%
  filter(y >= 0 & y <= 1) %N>%
  mutate(x = x[tangled]) %>%
  ggplot_wf(., y_range = y_range, fill = allele) +
  ggtitle("Sampled parents")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-3
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %E>%
  filter(to %in% 11:20) %N>%
  mutate(allele = ifelse(node %in% .E()$from, "parent", allele)) %>%
  mutate(allele = ifelse(node %in% .E()$to, "child", allele)) %>%
  filter(y >= 0 & y <= 1) %N>%
  mutate(x = x[tangled]) %>%
  ggplot_wf(., y_range = y_range, fill = allele) +
  ggtitle("Sampled parents")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-3-untangled
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %E>%
  filter(to %in% 11:20) %N>%
  mutate(allele = ifelse(node %in% .E()$from, "parent", allele)) %>%
  mutate(allele = ifelse(node %in% .E()$to, "child", allele)) %>%
  filter(y >= 0 & y <= 1) %N>%
  ggplot_wf(., y_range = y_range, fill = allele) +
  ggtitle("Sampled parents (untangled)")
```

:::

::::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="50%"}

Model of evolution that describes sampling of alleles in a population
under the following assumptions [@hein2005gene]:

- discrete and non-overlapping generations
- haploid individuals or two subpopulations (males and females)
- constant population size
- all individuals are equally fit
- population has no geographical or social structure
- no recombination

### Algorithm

1. Setup starting population at time zero
2. Add offspring (same size) at time one
3. Select parents to offspring at random

:::

::: {.column width="50%"}

```{r }
#| label: wf-4
#| echo: false
#| eval: true
#| cache: false
#| fig-height: 7
#| fig-width: 7
wf %>%
  filter(y >= 0 & y <= 2) %>%
  mutate(allele = ifelse(degree(., mode = "out") > 0 & y == 1, "b", "a")) %>%
  ggplot_wf(., y_range = y_range, fill = allele) + ggtitle("Sampled parents")
```

:::

::::

## Wright-Fisher model {.smaller}

```{r }
#| label: fig-wright-fisher-model-gganimation
#| echo: false
#| eval: true
#| aniopts: width=1000,controls=all
#| fig-show: animate
#| fig-keep: all
#| fig-cap: Wright-Fisher model
#| out-width: 14
popsize <- max(V(wf)$x) + 1
generations <- max(V(wf)$y) + 1
for (t in 3:generations) {
  obj <- wf %E>% filter(to <= (t * popsize)) %N>% filter(y >= 0 & y <= t)
  print(ggplot_wf(obj, y_range = y_range) + ggtitle(paste("Generation", t)))

  obj <- wf %N>%
    filter(y >= 0 & y <= t) %>%
    mutate(allele = ifelse(degree(., mode = "out") > 0 & y == (t - 1), "b", "a")) %E>%
    filter(to <= (t * popsize))

  print(ggplot_wf(obj, y_range = y_range, fill = allele) +
    ggtitle(paste("Generation", t)))

  obj <- wf %N>%
    filter(y >= 0 & y <= t) %>%
    mutate(allele = ifelse(degree(., mode = "out") > 0 & y == (t - 1), "b", "a")) %E>%
    filter(to <= ((t + 1) * popsize))

  print(ggplot_wf(obj, y_range = y_range, fill = allele) +
    ggtitle(paste("Generation", t)))
}
```

::: {.notes }

See <https://mikeyharper.uk/animated-plots-with-r/>

:::

## Wright-Fisher model {.smaller}

:::: {.columns}

::: {.column width="40%"}

```{r }
#| label: fig-wright-fisher-model-gganimation-last
#| echo: false
#| eval: true
#| fig-cap: |
#|   WF model indicating time
#|   direction from past (top) to present
#|   (bottom).
#| out-width: 100%
x_range <- range(vertex_attr(wf, "x"))
y_range <- range(vertex_attr(wf, "y"))
x1 <- x_range[1] - 0.5
x_range <- c(x1 - 2, x_range[2])
wf %>% ggplot_wf(.) +
  geom_segment(
    aes(
      x = x1, y = y_range[1],
      xend = x1, yend = y_range[2]
    ),
    arrow = arrow(
      length = unit(0.5, "cm"),
      type = "closed"
    )
  ) +
  annotate("text",
    label = "time",
    x = x1 - .5, y = mean(y_range),
    size = 10, angle = 90
  ) +
  annotate("text",
    label = "past",
    x = x1 - .5, y = 0,
    size = 10, hjust = 1,
  ) +
  annotate("text",
    label = "present",
    x = x1 - .5, y = 15,
    size = 10, hjust = 1,
  ) +
  expand_limits(x = x_range, y = y_range)
```

:::

::: {.column width="40%"}

::: {.fragment}

```{r}
#| label: fig-wf-model-genealogy
#| echo: false
#| eval: true
#| fig-cap: "WF model tracing the genealogies of three extant genes"
obj <- wf
i <- V(obj)[unlist(ego(obj, order = 16, nodes = c(152, 155, 158), mode = "in"))]
E(obj)$color <- "lightgray"
E(obj)$width <- .1
E(obj)[.to(i)]$width <- .2
E(obj)[.to(i)]$color <- "black"
ggraph(obj, layout = cbind(V(obj)$x, V(obj)$y)) +
  geom_edge_link(aes(color = color, width = width)) +
  scale_edge_color_manual(values = c(
    "black" = "black",
    "lightgray" = "lightgray"
  )) +
  geom_node_point(fill = "white", color = "black", shape = 21, size = 3) +
  theme(legend.position = "none", axis.text.x = element_blank()) +
  scale_y_reverse() + scale_edge_width(range = c(.8, 3))
```

:::

:::

::::

## Genetic drift with alleles

:::: {.columns .compact}

::: {.column width="35%" }

```{r }
#| label: wright-fisher-drift-0.3-1
#| echo: false
#| eval: true
#| cache: false
set.seed(1974)
g <- wright_fisher_pop(n = 10, generations = 16, p0 = 3)
ggplot_wf(g, fill = allele) + ggtitle("Allele fixation") +
  scale_fill_manual(values = c("a" = "white", "A" = "black"))
```

:::

::: {.column width="35%" .fragment}

```{r }
#| label: wright-fisher-drift-0.3-2
#| echo: false
#| eval: true
#| cache: false
set.seed(2014)
g <- wright_fisher_pop(n = 10, generations = 16, p0 = 0.3)
ggplot_wf(g, fill = allele) + ggtitle("Allele loss") +
  scale_fill_manual(values = c("a" = "white", "A" = "black"))
```

:::

Wright-Fisher model showing the evolution of population of 10 genes
over 16 generations. Allele variants are shown in white and black.
Starting frequency black variant is 0.3.

::::

## The Wright-Fisher sampling model {.smaller}

Let's formalise the sampling process of the Wright-Fisher model^[For a
more extensive treatment, see
[@hermisson_MathematicalPopulationGenetics_2017]]

We assume

1. a single locus in a haploid population of size N
2. no mutation and selection
3. discrete generations

Each generation we sample N new individuals from the previous
generation, which is equivalent to *multinomial sampling with
replacement*. Then, the number of offspring of a given parent *i* is
*binomially distributed*, with probability of success $p=\frac{1}{N}$:

$$
\mathrm{Pr}(x) = {N\choose x}\left( \frac{1}{N} \right)^x
\left(1 - \frac{1}{N} \right)^{(N - x)}
$$

Under the assumption of random mating, a diploid population of size
$N$ can be described by a haploid population of size $2N$

## Genetic drift

:::: {.columns}

::: {.column width="50%"}

To capture dynamics, follow allele frequency trajectory as function of
time.

::: {.smallr}

```{r code=readLines("../../../src/R/pgip/R/wright_fisher.R")}
#| label: wright-fisher-source
#| echo: true
#| eval: false
```

:::

::: {.fragment fragment-index=2}

Note dependency of "jumpyness" (variance) on population size N

:::

:::

::: {.column width="50%" .fragment fragment-index=1}

```{r }
#| label: genetic-drift-example
#| echo: false
#| eval: true
#| cache: false
set.seed(1223)
n_reps <- 50
n_gen <- 100
conditions <- 4
p0 <- rep(c(0.01, 0.1, 0.5, 0.8), each = conditions)
N <- rep(c(50, 100, 1000, 5000), conditions)
sample <- rep(seq(1, n_reps), length(N))
p0_long <- rep(p0, each = n_reps)
N_long <- rep(N, each = n_reps)

wf <- mapply(wright_fisher, p0_long, N_long, n_gen, SIMPLIFY = FALSE)
wf <- data.frame(
  frequency = unlist(wf), N = rep(N_long, each = n_gen),
  generation = seq(1, n_gen), sample = rep(sample, each = n_gen),
  p0 = rep(p0_long, each = n_gen)
)
wf$N <- factor(wf$N)
wf$sample <- factor(wf$sample)
```

```{r }
#| label: fig-genetic-drift-N-10
#| echo: false
#| eval: true
#| fig-show: animate
#| fig-keep: all
#| out-width: 60%
#| fig-cap: |
#|    - Genetic drift for different population sizes,
#|    - starting frequency $p_0$=0.5
ggplot(
  subset(wf, wf$sample == 1 & wf$p0 == 0.5),
  aes(x = generation, y = frequency)
) +
  geom_line(size = 1) +
  xlim(1, 100) +
  ylim(0, 1) +
  facet_wrap(. ~ N) +
  transition_reveal(generation)
```

:::

::::

::: {.notes }

Classic graph of allele: start at say 0.2 and drift with different Ne.
Point out that variation becomes smaller with large Ne, but that
eventually, an allele is fixed or lost (formula).

Mention *neutral* here as this is how alleles behave under drift: like
gas particle diffusing up and down

See alternative way of visualizing variation faceting on initial
frequency (showing P(fixation)) and population size (showing less
variance))

<https://stephens999.github.io/fiveMinuteStats/wright_fisher_model.html>

:::

## Genetic drift

:::: {.columns}

::: {.column width="65%"}

<!-- markdownlint-disable MD013 -->

```{r }
#| label: fig-genetic-drift-many-repetitions
#| echo: false
#| eval: true
#| fig-height: 8
#| fig-width: 12
#| fig-cap: |
#|   Genetic drift for different combinations of starting
#|   frequency and population size for n=50 repetitions per parameter
#|   combination. Note how variation and time to fixation depends on
#|   population size and starting frequency.
ggplot(wf, aes(x = generation, y = frequency, group = sample)) +
  geom_line() +
  xlim(1, 100) +
  ylim(0, 1) +
  facet_grid(N ~ p0)
```

<!-- markdownlint-enable MD013 -->

:::

::: {.column width="35%"}

Probability of fixation $\propto p_0$

:::

::::

::: {.notes }

Simplifying assumptions -> rate of drift $propto \frac{1}{N}$
[@leffler_RevisitingOldRiddle_2012]

In reality population fluctuates and therefore Ne is substituted for
N. Larger Ne -> smaller fluctuation in allele frequency (as evidenced
in plots) -> maintain larger genetic diversity

:::

## Heterozygosity dynamics

:::: {.columns}

::: {.column width="50%"}

```{r, engine='tikz', fig.ext="svg" }
#| label: fig-identity-by-state-and-descent
#| echo: false
#| eval: true
#| out-width: 70%
#| fig-cap: Illustration of identity by descent and state.
\begin{tikzpicture}
\node (n_2) {$n-2$};
\node[right of=n_2] (nl0) {};
\node[right of=nl0] (n0) {\ttfamily-aac-};
\node[right of=n0] (nr0) {};
\node[below of=nl0,anchor=north] (n1) {\ttfamily-aac-};
\node[below of=nr0,anchor=north] (n2) {\ttfamily-aac-};
  \node[below of=n1,anchor=north] (n3) {\ttfamily-aac-};
  \node[below of=n2,anchor=north] (n4) {\ttfamily-aag-};
  \node[left of=n1] (nm1) {$n - 1$};
  \node[left of=n3] {$n$};
  \draw[->] (n0) -- (n1);
  \draw[->] (n0) -- (n2);
  \draw[->] (n1) -- (n3);
  \draw[->] (n2) -- (n4);
\end{tikzpicture}
```

:::

::: {.column width="50%"}

Let $\mathcal{H}_t$ be the probability that two alleles are *identical
by state*. The time course evolution of $\mathcal{H}_t$ in a randomly
mating population consisting of $N$ diploid hermaphroditic individuals
is

$$
\mathcal{H}_t = \mathcal{H}_0 \left( 1 - \frac{1}{2N} \right)^t
$$

Important consequence: heterozygosity in WF population lost at rate
$1/2N$.

:::

::::

::: {.notes }

Motivation: mathematical description of genetic drift complicated for
populations with more than one individual. Easier to study the
evolution of heterozygosity.

:::

## Heterozygosity dynamics

:::: {.columns}

::: {.column width="50%"}

```{r }
#| label: fig-gillespie-2.4
#| echo: false
#| eval: true
#| fig-cap: Plot of $\mathcal{H}_t$.
#| out-width: 70%
het_t <- function(N=1, t=0:100, H0=1) {
  H0 * (1 - 1/(2*N))^t
}
tmax <- 100
t <- 0:tmax
data <- data.frame(
    population_size = c(
        rep(1, length(t)),
        rep(10, length(t)),
        rep(100, length(t)),
        rep(1e6, length(t))),
    het = c(het_t(N=1), het_t(N=10), het_t(N=100), het_t(N=1e6)),
    tn = rep(t, 4)
)
ggplot(data, aes(x=tn, y=het, shape=factor(population_size))) +
  geom_point(size=3) + geom_line() + xlab("generation") +
  ylab("heterozygosity") + guides(shape=guide_legend(title="Size"))
```

:::

::: {.column width="50%"}

```{r }
#| label: fig-black-footed-ferret
#| echo: false
#| eval: true
#| out-width: 70%
#| fig-cap: Heterozygosity in black-footed ferret [@wisely_GeneticDiversityFitness_2002]
# cf: https://github.com/cooplab/popgen-notes/blob/master/Journal_figs/genetic_drift/black_footed_ferrets/black-footed-ferrets_He.csv
data <- data.frame(date=c(1891, 1972, 1985, 1986),
                   He=c(0.231284916, 0.210335196,
                        0.101396648, 0.067877095),
                   N=c("N>10k", "N=62", "N=40", "N=7")
                   )
ggplot(data, aes(x=date, y=He, label=N)) + geom_line() + geom_point() +
  xlab("year") + ylab("heterozygosity") + geom_text(nudge_y=.005, nudge_x=2)
```

:::

::::

## Effective population size

# Origin and change of variation

## Mutation

:::: {.columns}

::: {.column width="60%"}

Genetic drift "moves" frequencies to the point that variation is lost
via allele fixation or loss. New variation is introduced through
*mutation*. We typically assume mutations are described by a Poisson
process with rate $\mu$ (per generation).

The *mutation rate* is denoted $\mu$, and the *population scaled*
mutation rate is $2N_e\mu$ for haploid populations, $4N_e\mu$ for
diploid, where $N_e$ is the *effective population size*.

The *mutation - drift balance* is when the diversity lost due to drift
equals the diversity gained due to mutation.

:::

::: {.column width="40%"}

```{r }
#| label: fig-wf-mutation
#| echo: false
#| eval: true
#| fig-height: 15
#| fig-width: 12
#| out-height: 500px
#| out-width: 400px
#| fig-cap: |
#|   Variation is introduced by mutations (black) at rate $\mu=1e^{-4}$
#|   and is  occasionally lost through genetic drift.
set.seed(1212)
wf <- wright_fisher_pop(n = 40, generations = 30, mu = 0.0001)
ggplot_wf(wf, fill = allele) +
  scale_fill_manual(values = c("a" = "white", "A" = "black"))
```

:::

::::

## Tracing the evolution of mutations

:::: {.columns}

::: {.column width="50%"}

```{r }
#| label: fig-tracing-evolution-of-mutations
#| echo: false
#| eval: true
#| fig-height: 15
#| fig-width: 15
#| out-height: 600px
#| out-width: 600px
#| fig-cap: |
#|   Different mutations suffer different fates.
#|   Most mutations are lost in a couple of
#|   generations. Mutant alleles are colored
#|   black and their genealogies are highlighted
#|   with thicker edges.
j <- wf %E>%
  filter(.N()$allele[from] == "a" & .N()$allele[to] == "A") %>%
  pull(., to)
V(wf)$m0 <- V(wf)$allele
cliques <- ego(wf,
  order = attr(wf, "generations"),
  nodes = j, mode = "out"
)
wf %>%
  mutate(clique = .N()$m0 != "a") %E>%
  mutate(width = (0.2 + as.integer(.N()$allele[from] != "a"))) %N>%
  ggplot_wf(fill = clique, node_color = "lightgray")
```

:::

::: {.column width="50%"}

:::

::::

## Models of mutation

<!-- markdownlint-disable MD013 -->

```{r, engine='tikz', fig.ext="svg" }
#| label: mutation-models
#| echo: false
#| eval: true
\usetikzlibrary{fit,decorations.pathreplacing}

\begin{tikzpicture}[
  every matrix/.style={matrix of nodes, ampersand replacement=\&,
    nodes in empty cells},
  every node/.style={text height=1.5ex},
  ]
\tikzstyle{sequence} = [black, font=\sffamily, column sep={.5cm,between origins}]
  \matrix(seq)[sequence] at (0,0)
  {
    T \& T \& A \& C \& A \& A \& T \& C \& C \& G \& A \& T \& C \& G \& C\\
    T \& T \& A \& C \& G \& A \& T \& G \& C \& G \& C \& T \& C \& G \& C\\
    T \& C \& A \& C \& A \& A \& T \& G \& C \& G \& A \& T \& G \& G \& A\\
     T \& T \& A \& C \& G \& A \& T \& G \& C \& G \& C \& T \& C \& G \& T\\
  };
\node[fit={(seq-1-2.north west) (seq-4-2.south east)}, inner sep=0, draw=black]{};
\node[fit={(seq-1-15.north west) (seq-4-15.south east)}, inner sep=0, draw=black]{};
\node[above of=seq-1-2, node distance=1.2cm] (two-allele) {Two-allele model};
\draw (seq-1-2.north) -- (two-allele);
\node[above of=seq-1-15, node distance=1.2cm] (finite) {Finite sites model};
\draw (seq-1-15.north) -- (finite);
\draw[decorate,decoration={brace,raise=0.2cm}] (seq-1-15.north east) -- (seq-4-15.south east);
\node at ($(seq-3-15) !.5! (seq-2-15)$) (seq-right) {};
\node[anchor=west, text width=1cm, right of=seq-right, node distance=1.2cm] (infinite-alleles) {Inifinite alleles model};
\node at ($(seq-4-1) !.5! (seq-4-15)$) (seq-low) {};
\draw[decorate,decoration={brace,mirror,raise=0.2cm}] (seq-4-1.south west) -- (seq-4-15.south east);
\node[below of=seq-low, node distance=.8cm] (infinite-sites) {Inifinite sites model};
\end{tikzpicture}
```

::: {.fragment}

```{r, engine='tikz', fig.ext='svg' }
#| label: stepwise-mutation-model
#| echo: false
#| eval: true
#| out-width: 1000px
\begin{tikzpicture}[
  every matrix/.style={matrix of nodes, ampersand replacement=\&,
    nodes in empty cells},
  every node/.style={text height=2ex},
  ]
  \tikzstyle{sequence} = [black, font=\sffamily, column sep={1.5cm,between origins},row sep={.7cm}]
  \matrix(seq)[sequence] at (0,0)
  {
$\mathsf{A}_{i-3}$ \&  $\mathsf{A}_{i-2}$ \&  $\mathsf{A}_{i-1}$ \& $\mathsf{A}_{i}$ \&  $\mathsf{A}_{i+1}$ \&  $\mathsf{A}_{i+2}$ \& $\mathsf{A}_{i+3}$ \\
  \&   \&  \&   \&   \&  \&  \\
  };
\draw[<->] (seq-1-1) -- (seq-1-2);
\draw[<->] (seq-1-2) -- (seq-1-3);
\draw[<->] (seq-1-3) -- (seq-1-4);
\draw[<->] (seq-1-4) -- (seq-1-5);
\draw[<->] (seq-1-5) -- (seq-1-6);
\draw[<->] (seq-1-6) -- (seq-1-7);
\node[left of=seq-1-1, node distance=0.7cm] {...};
\node[right of=seq-1-7, node distance=0.7cm] {...};
\draw[thick] (seq-2-1.south) -- (seq-2-1.north)
(seq-2-2.south) -- (seq-2-2.north)
(seq-2-3.south) -- (seq-2-3.north)
(seq-2-4.south) -- (seq-2-4.north)
(seq-2-5.south) -- (seq-2-5.north)
(seq-2-6.south) -- (seq-2-6.north)
(seq-2-7.south) -- (seq-2-7.north);

\draw[thick] (seq-2-1.west) -- (seq-2-7.east);
\node[above of=seq-1-4] {Stepwise mutation model};
\end{tikzpicture}
```

:::

<!-- markdownlint-enable MD013 -->

## Mutation drift balance

# Selection

## Selection

$$
\begin{matrix}
\mathrm{Genotype} & A_1A_1 & A_1A_2 & A_2A_2 \\
\mathrm{Fitnesses} & w_{11} & w_{12} & w_{22}\\
\mathrm{Observations} & 1.5 & 1.1 & 1.0 \\
\mathrm{Relative\ fitness} & 1 & 1-hs & 1-s\\
\mathrm{Normalized} & 1 & 11 / 15 & 10 / 15
\end{matrix}
$$

Relative fitness.

Define s, positive and negative selection

## Direct selection

d_N/d_S

## Selective sweeps

Show WF-model with sweep

## Two-locus dynamics

Graph focal locus and flanking loci (Charlesworth figure)

- Linkage disequilibrium and recombination (each probably need
  separate treatment)
- Contrast linked selection with direct selection
- Genetic draft / background selection

## Soft sweep

## Neutral theory

Move right after drift?

- Hahn: $\mu = \nu*f_0$
- why population size matters
- Fig 4.2, Eq 4.2 from Lynch

::: {.notes }

Mutation - drift balance. Simplifying assumptions -> rate of drift
$propto \frac{1}{N}$ [@leffler_RevisitingOldRiddle_2012]

In reality population fluctuates and therefore Ne is substituted for
N. Larger Ne -> smaller fluctuation in allele frequency (as evidenced
in plots) -> maintain larger genetic diversity

Neutral diversity patterns depend not only on drift but also on rate
at which variation changes at *linked sites*
[@leffler_RevisitingOldRiddle_2012]

:::

## Nearly neutral theory

- Distribution of fitness effects?

## Effect on genetic diversity

::: {.notes }

Mutation - drift balance. Mode of selection important:

- selection for adaptation at new mutations decreases diversity more
  than if at standing variation
- balancing selection may *increase* variation

Recombination

- low recombination -> lower diversity (less reshuffling of variation)

:::
