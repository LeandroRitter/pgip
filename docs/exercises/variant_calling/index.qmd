---
format: html
---

<!-- markdownlint-disable MD041 -->

{{< include ../_knitr.qmd >}}

{{< include ../_rlibs.qmd >}}

<!-- markdownlint-enable MD041 -->

# Variant calling {#sec-variantcalling}

In this exercise we will produce a variant call set, going through the
basic steps from quality control, read mapping to variant calling. We
will be working on the [Monkeyflowers
dataset](../datasets/monkeyflowers.qmd). Make sure to read the dataset
document before running any commands as it will give you the
biological background and instructions on how to access and setup the
data. We will focus on the *red* and *yellow* ecotypes in what follows.

::: {.callout-important}

NB! The commands of this document have been run on a subset (a
subregion) of the data. Therefore, although you will use the same
commands, your results will differ from those presented here!

:::

## Best practice pipeline

Briefly describe best practice pipeline (e.g. GATK, bcftools,
freebayes), highlighting some of the problems with natural
populations:

- many workflows are human-centric and don't scale to non-model
  organisms (e.g. chromosome numbers in GATK)

Workflows begin with mapping; do this as common step. Then, move on to
variant calling and present three alternatives to highlight differences:

1. GATK (human-centric; highlight problems)
2. freebayes
3. ANGSD - especially for low-coverage, however need to work with
   genotype likelihoods

Make 2 and 3 optional.

## Preparation

### Reference

#### Create fasta index

```{bash }
#| label: samtools-faidx
#| echo: true
#| eval: true
samtools faidx M_aurantiacus_v1.fasta
```

#### Create sequence dictionary

```{bash }
#| label: create-sequence-dictionary
#| echo: true
#| eval: true
picard CreateSequenceDictionary --REFERENCE M_aurantiacus_v1.fasta
```

#### Create bwa index

```{bash }
#| label: bwa-index
#| echo: true
#| eval: true
bwa index M_aurantiacus_v1.fasta
```

## Read quality control

```{bash }
#| label: fastqc-red
#| echo: true
#| eval: true
fastqc
```

## Read mapping

### Fastq

### Duplicate removal

Picard MarkDuplicates or bamUtil dedup (samtools rmdup deprecated)

## Variant calling

### GATK workflow

[@hansen_VariantCallingNext_2016]

### Freebayes (optional)

### ANGSD (optional)

# References
